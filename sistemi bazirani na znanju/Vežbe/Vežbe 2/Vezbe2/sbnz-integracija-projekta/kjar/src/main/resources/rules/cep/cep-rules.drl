package cep;
import  com.ftn.sbnz.model.TransactionEvent;

declare SuspiciousCustomerEvent
    @role(event)
    customerId: Long
    reason: String
end

declare AlarmTriggered
    customerId: Long
end

rule "More than 10 transactions in an hour from one client"
    when
        $t1: TransactionEvent($cId: customerId)
        Number(intValue >= 10) from accumulate(
            $t2: TransactionEvent(
                this != $t1, 
                customerId == $cId, 
                this after[0s, 1h] $t1
            ),
            count($t2)
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Many transactions"))
    then
        System.out.println("Inserting Many transactions SuspiciousCustomerEvent");
        insert(new SuspiciousCustomerEvent($cId, "Many transactions"));
end

rule "More than 1 transaction of 200 dollars in an hour from the same client"
    when
        $t1: TransactionEvent($cId: customerId, totalAmount >= 200.0)
        $t2: TransactionEvent(
            this != $t1, 
            this after[0s, 1h] $t1, 
            customerId == $cId, 
            totalAmount >= 200.0
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Two large transactions"))
    then
        System.out.println("Inserting Two large transactions SuspiciousCustomerEvent");
        insert(new SuspiciousCustomerEvent($cId, "Two large transactions"));
end

rule "More than 2 suspicious cases in the day and we warn the owner"
    when
        $s1: SuspiciousCustomerEvent($cId: customerId)
        not (AlarmTriggered(customerId == $cId))
        $c: Number(intValue >= 2) from accumulate(
            $s: SuspiciousCustomerEvent(customerId == $cId),
            count($s)
        )
    then
        //warn the owner
        System.out.println("WARNING: Suspicious fraud case. Client " + $cId);
        insert(new AlarmTriggered($cId));
end


rule "More than 10 transactions in an hour from small client portal"
    when
        $t1: TransactionEvent($cId: customerId) from entry-point "small-client-portal"
        Number(intValue >= 10) from accumulate(
            $t2: TransactionEvent(
                this != $t1, 
                customerId == $cId, 
                this after[0s, 1h] $t1
            ) from entry-point "small-client-portal",
            count($t2)
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Many transactions"))
    then
        insert(new SuspiciousCustomerEvent($cId, "Many transactions"));
end

rule "More than 100 transactions in an hour from big client portal"
    when
        $t1: TransactionEvent($cId: customerId) from entry-point "big-client-portal"
        Number(intValue >= 100) from accumulate(
            $t2: TransactionEvent(
                this != $t1, 
                customerId == $cId, 
                this after[0s, 1h] $t1
            ) from entry-point "big-client-portal",
            count($t2)
        )
        not (SuspiciousCustomerEvent(customerId == $cId, reason == "Many transactions"))
    then
        insert(new SuspiciousCustomerEvent($cId, "Many transactions"));
end
